apply plugin: 'java-library'
apply plugin: "kotlin"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

task updateMovieJson(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.ruzhan.jsonfile.CreateJsonMain"
}
buildscript {
    ext.kotlin_version = '1.3.60'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task ffmpegCommendSet() {
    String mediaName = ""
    if (!mediaName.isBlank()) {
        checkMediaInfo(mediaName)
    }
}

void checkMediaInfo(String mediaName) {
    println("checkMediaInfo called...")
    exec {
        workingDir '../movie-source/'
        commandLine 'ffprobe', '' + mediaName + ".flv"
    }
}

void transformToMp4(String mediaName) {
    println("transformToMp4 called...")
    exec {
        workingDir '../movie-source/'
        commandLine 'ffmpeg', '-i', '' + mediaName + ".flv", '-acodec', 'copy', '' + mediaName + ".mp4"
    }
}
